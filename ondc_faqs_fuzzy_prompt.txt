/* === Copilot Super-Prompt: Upgrade ONDC FAQs Site with Fuzzy Search ===
Context
  We already have a static GitHub Pages site titled “ONDC FAQs” that reads
  FAQs from data/faqs.yaml and shows them in a Bootstrap accordion.
  Now we want to:
    • Replace data source with data/faqs_enriched.yaml (includes improved tags).
    • Add fuzzy + advanced search across question, answer, and tags using Fuse.js.
    • Show matching score–ranked results live as user types.

Tasks
  1. Replace existing YAML file with the attached faqs_enriched.yaml (327 FAQs, each
     {question, answer, tags[]}).
  2. Update /js/app.js:
       – Load Fuse.js v6 from CDN: https://cdn.jsdelivr.net/npm/fuse.js/dist/fuse.min.js
       – After fetching YAML and parsing, build `const fuse = new Fuse(faqs, {
           keys: ['question', 'answer', 'tags'],
           threshold: 0.35,
           includeScore: true,
           ignoreLocation: true
         });`
       – On 'input' event of #tagSearch:
           > If query string length === 0, show all FAQs.
           > Else run `const res = fuse.search(query);`
           > Map `res` to res[i].item and render in ranked order.
       – Highlight matched substrings in question using <mark>.
  3. Update UI tweaks (optional):
       – Show tiny “x results” text below search box.
       – If no hits, show Alert “No FAQs match your query.”
  4. Keep existing ONDC branding in index.html and css/style.css.
  5. Ensure page works offline once assets cached.

Deliverables
  • Modified `data/faqs_enriched.yaml` (already provided; just commit).
  • Updated `js/app.js` with Fuse.js integration.
  • Any minor adjustments in `index.html` (add Fuse.js script tag) and `README.md`
    (note Fuse.js, fuzzy search).

Coding constraints
  – No build tools; pure JS.
  – Keep JS <180 LOC; comment major steps.
  – Maintain accessibility: search input has aria-label.

When finished, list updated files so the user can commit and push.

=== End Prompt === */